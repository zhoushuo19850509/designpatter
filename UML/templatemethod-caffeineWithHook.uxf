<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>390</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>/CaffeineBeverageWithHook/
--
/brew()/
/addCondiments()/
--
prepareRecipe()
boilWater()
pourInCup()
customerWantCondiment()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>600</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>CoffeeWithHook
--
brew()
addCondiments()
customerWantCondiment()
getUserInput()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>510</y>
      <w>170</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>610</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>TeaWithoutHook
--
brew()
addCondiments()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>510</y>
      <w>160</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>80</x>
      <y>130</y>
      <w>650</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>这个UML是为了说明TemplateMethod设计模式下的一个hook场景:
CaffeineBeverageWithHook

啥意思呢?就是在抽象父类中,可以定义一些hook method
这些method是不是abstract类型的,一般会有一些默认的实现逻辑,比如直接返回true啥的
子类可以重写这个hook method,也可以选择不重写.

比如在这个例子中,CaffeineBeverageWithHook.customerWantCondiment()
就是一个hook method,我们在CoffeeWithHook.java中重写了customerWantCondiment()方法
但是在TeaWithoutHook.java中就没有重写.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>440</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>boilWater()
/brew()/
/addCondiments()/
pourInCup()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>430</x>
      <y>450</y>
      <w>300</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;280.0;10.0</additional_attributes>
  </element>
</diagram>
